// Code generated by "stringer -type TokenType token.go"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Illegal-1]
	_ = x[Class-2]
	_ = x[Constructor-3]
	_ = x[Function-4]
	_ = x[Method-5]
	_ = x[Field-6]
	_ = x[Static-7]
	_ = x[Var-8]
	_ = x[Int-9]
	_ = x[Char-10]
	_ = x[Boolean-11]
	_ = x[Void-12]
	_ = x[True-13]
	_ = x[False-14]
	_ = x[Null-15]
	_ = x[This-16]
	_ = x[Let-17]
	_ = x[Do-18]
	_ = x[If-19]
	_ = x[Else-20]
	_ = x[While-21]
	_ = x[Return-22]
	_ = x[LeftBrace-23]
	_ = x[RightBrace-24]
	_ = x[LeftParen-25]
	_ = x[RightParen-26]
	_ = x[LeftBraket-27]
	_ = x[RightBraket-28]
	_ = x[Dot-29]
	_ = x[Comma-30]
	_ = x[SemiColon-31]
	_ = x[Plus-32]
	_ = x[Minus-33]
	_ = x[Multiply-34]
	_ = x[Divide-35]
	_ = x[Ampersand-36]
	_ = x[Pipe-37]
	_ = x[GreaterThan-38]
	_ = x[LessThan-39]
	_ = x[Equal-40]
	_ = x[Tilde-41]
	_ = x[IntegerConstant-42]
	_ = x[StringConstant-43]
	_ = x[Identifier-44]
}

const _TokenType_name = "EOFIllegalClassConstructorFunctionMethodFieldStaticVarIntCharBooleanVoidTrueFalseNullThisLetDoIfElseWhileReturnLeftBraceRightBraceLeftParenRightParenLeftBraketRightBraketDotCommaSemiColonPlusMinusMultiplyDivideAmpersandPipeGreaterThanLessThanEqualTildeIntegerConstantStringConstantIdentifier"

var _TokenType_index = [...]uint16{0, 3, 10, 15, 26, 34, 40, 45, 51, 54, 57, 61, 68, 72, 76, 81, 85, 89, 92, 94, 96, 100, 105, 111, 120, 130, 139, 149, 159, 170, 173, 178, 187, 191, 196, 204, 210, 219, 223, 234, 242, 247, 252, 267, 281, 291}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
